语法

    0 $accept: program $end

    1 program: T MAIN LEFT RIGHT statements
    2        | statements

    3 statements: statement
    4           | statements statement

    5 statement: SEMICOLON
    6          | decl_stmt SEMICOLON
    7          | assign_stmt SEMICOLON
    8          | scanf_stmt SEMICOLON
    9          | printf_stmt SEMICOLON
   10          | iter_stmt
   11          | if_stmt
   12          | for_stmt
   13          | LEFT2 statements RIGHT2

   14 decl_stmt: T IDENTIFIER ASSIGNEQUAL add_expr
   15          | T idlist

   16 assign_stmt: assign_expr

   17 iter_stmt: WHILE bool_stmt statement

   18 if_stmt: IF bool_stmt statement

   19 for_stmt: FOR LEFT decl_stmt SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   20         | FOR LEFT assign_expr SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   21         | FOR LEFT SEMICOLON SEMICOLON RIGHT statement RIGHT
   22         | FOR LEFT SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   23         | FOR LEFT assign_expr SEMICOLON SEMICOLON assign_expr RIGHT statement
   24         | FOR LEFT assign_expr SEMICOLON or_expr SEMICOLON RIGHT statement
   25         | FOR LEFT assign_expr SEMICOLON SEMICOLON RIGHT statement
   26         | FOR LEFT SEMICOLON or_expr SEMICOLON RIGHT statement
   27         | FOR LEFT SEMICOLON SEMICOLON assign_expr RIGHT statement

   28 scanf_stmt: SCANF LEFT STRING COMMA idlist RIGHT
   29           | SCANF LEFT STRING RIGHT

   30 printf_stmt: PRINTF LEFT STRING COMMA idlist RIGHT
   31            | PRINTF LEFT STRING RIGHT

   32 idlist: idlist COMMA IDENTIFIER
   33       | idlist COMMA REFERENCE IDENTIFIER
   34       | IDENTIFIER
   35       | REFERENCE IDENTIFIER

   36 assign_expr: or_expr ASSIGNEQUAL assign_expr
   37            | or_expr ADDEQUAL assign_expr
   38            | or_expr SUBEQUAL assign_expr
   39            | or_expr MULEQUAL assign_expr
   40            | or_expr DIVEQUAL assign_expr
   41            | or_expr

   42 bool_stmt: LEFT or_expr RIGHT

   43 or_expr: or_expr OR and_expr
   44        | and_expr

   45 and_expr: and_expr AND equal_expr
   46         | equal_expr

   47 equal_expr: equal_expr EQUAL relation_expr
   48           | equal_expr NOTEQUAL relation_expr
   49           | relation_expr

   50 relation_expr: relation_expr GREAT add_expr
   51              | relation_expr LESS add_expr
   52              | relation_expr GREATEQUAL add_expr
   53              | relation_expr LESSEQUAL add_expr
   54              | add_expr

   55 add_expr: add_expr ADD mul_expr
   56         | add_expr SUB mul_expr
   57         | mul_expr

   58 mul_expr: mul_expr MUL unary_expr
   59         | mul_expr DIV unary_expr
   60         | mul_expr MOD unary_expr
   61         | unary_expr

   62 unary_expr: SUB unary_expr
   63           | ADD unary_expr
   64           | NOT unary_expr
   65           | SELFADD unary_expr
   66           | SELFSUB unary_expr
   67           | postfix_expr

   68 postfix_expr: postfix_expr SELFADD
   69             | postfix_expr SELFSUB
   70             | expr

   71 expr: LEFT add_expr RIGHT
   72     | IDENTIFIER
   73     | INTEGER
   74     | CHAR
   75     | STRING
   76     | BOOL

   77 T: T_INT
   78  | T_CHAR
   79  | T_BOOL
   80  | T_STRING


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    T_CHAR (258) 78
    T_INT (259) 77
    T_STRING (260) 80
    T_BOOL (261) 79
    WHILE (262) 17
    FOR (263) 19 20 21 22 23 24 25 26 27
    IF (264) 18
    MAIN (265) 1
    SCANF (266) 28 29
    PRINTF (267) 30 31
    COMMA (268) 28 30 32 33
    LEFT (269) 1 19 20 21 22 23 24 25 26 27 28 29 30 31 42 71
    RIGHT (270) 1 19 20 21 22 23 24 25 26 27 28 29 30 31 42 71
    LEFT2 (271) 13
    RIGHT2 (272) 13
    SEMICOLON (273) 5 6 7 8 9 19 20 21 22 23 24 25 26 27
    REFERENCE (274) 33 35
    ASSIGNEQUAL (275) 14 36
    ADDEQUAL (276) 37
    SUBEQUAL (277) 38
    MULEQUAL (278) 39
    DIVEQUAL (279) 40
    OR (280) 43
    AND (281) 45
    NOT (282) 64
    EQUAL (283) 47
    NOTEQUAL (284) 48
    GREAT (285) 50
    LESS (286) 51
    GREATEQUAL (287) 52
    LESSEQUAL (288) 53
    ADD (289) 55 63
    SUB (290) 56 62
    MUL (291) 58
    DIV (292) 59
    MOD (293) 60
    IDENTIFIER (294) 14 32 33 34 35 72
    INTEGER (295) 73
    CHAR (296) 74
    BOOL (297) 76
    STRING (298) 28 29 30 31 75
    UMINUS (299)
    UADD (300)
    SELFADD_R (301)
    SELFSUB_R (302)
    SELFADD (303) 65 68
    SELFSUB (304) 66 69


非终结语词，附有它们出现处的规则

    $accept (50)
        on left: 0
    program (51)
        on left: 1 2
        on right: 0
    statements (52)
        on left: 3 4
        on right: 1 2 4 13
    statement (53)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 3 4 17 18 19 20 21 22 23 24 25 26 27
    decl_stmt (54)
        on left: 14 15
        on right: 6 19
    assign_stmt (55)
        on left: 16
        on right: 7
    iter_stmt (56)
        on left: 17
        on right: 10
    if_stmt (57)
        on left: 18
        on right: 11
    for_stmt (58)
        on left: 19 20 21 22 23 24 25 26 27
        on right: 12
    scanf_stmt (59)
        on left: 28 29
        on right: 8
    printf_stmt (60)
        on left: 30 31
        on right: 9
    idlist (61)
        on left: 32 33 34 35
        on right: 15 28 30 32 33
    assign_expr (62)
        on left: 36 37 38 39 40 41
        on right: 16 19 20 22 23 24 25 27 36 37 38 39 40
    bool_stmt (63)
        on left: 42
        on right: 17 18
    or_expr (64)
        on left: 43 44
        on right: 19 20 22 24 26 36 37 38 39 40 41 42 43
    and_expr (65)
        on left: 45 46
        on right: 43 44 45
    equal_expr (66)
        on left: 47 48 49
        on right: 45 46 47 48
    relation_expr (67)
        on left: 50 51 52 53 54
        on right: 47 48 49 50 51 52 53
    add_expr (68)
        on left: 55 56 57
        on right: 14 50 51 52 53 54 55 56 71
    mul_expr (69)
        on left: 58 59 60 61
        on right: 55 56 57 58 59 60
    unary_expr (70)
        on left: 62 63 64 65 66 67
        on right: 58 59 60 61 62 63 64 65 66
    postfix_expr (71)
        on left: 68 69 70
        on right: 67 68 69
    expr (72)
        on left: 71 72 73 74 75 76
        on right: 70
    T (73)
        on left: 77 78 79 80
        on right: 1 14 15


状态 0

    0 $accept: • program $end

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    program        转到状态 23
    statements     转到状态 24
    statement      转到状态 25
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 43


状态 1

   78 T: T_CHAR •

    $default  使用规则 78 以归约 (T)


状态 2

   77 T: T_INT •

    $default  使用规则 77 以归约 (T)


状态 3

   80 T: T_STRING •

    $default  使用规则 80 以归约 (T)


状态 4

   79 T: T_BOOL •

    $default  使用规则 79 以归约 (T)


状态 5

   17 iter_stmt: WHILE • bool_stmt statement

    LEFT  偏移，并进入状态 44

    bool_stmt  转到状态 45


状态 6

   19 for_stmt: FOR • LEFT decl_stmt SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   20         | FOR • LEFT assign_expr SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   21         | FOR • LEFT SEMICOLON SEMICOLON RIGHT statement RIGHT
   22         | FOR • LEFT SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   23         | FOR • LEFT assign_expr SEMICOLON SEMICOLON assign_expr RIGHT statement
   24         | FOR • LEFT assign_expr SEMICOLON or_expr SEMICOLON RIGHT statement
   25         | FOR • LEFT assign_expr SEMICOLON SEMICOLON RIGHT statement
   26         | FOR • LEFT SEMICOLON or_expr SEMICOLON RIGHT statement
   27         | FOR • LEFT SEMICOLON SEMICOLON assign_expr RIGHT statement

    LEFT  偏移，并进入状态 46


状态 7

   18 if_stmt: IF • bool_stmt statement

    LEFT  偏移，并进入状态 44

    bool_stmt  转到状态 47


状态 8

   28 scanf_stmt: SCANF • LEFT STRING COMMA idlist RIGHT
   29           | SCANF • LEFT STRING RIGHT

    LEFT  偏移，并进入状态 48


状态 9

   30 printf_stmt: PRINTF • LEFT STRING COMMA idlist RIGHT
   31            | PRINTF • LEFT STRING RIGHT

    LEFT  偏移，并进入状态 49


状态 10

   71 expr: LEFT • add_expr RIGHT

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    add_expr      转到状态 50
    mul_expr      转到状态 39
    unary_expr    转到状态 40
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 11

   13 statement: LEFT2 • statements RIGHT2

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statements     转到状态 51
    statement      转到状态 25
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 12

    5 statement: SEMICOLON •

    $default  使用规则 5 以归约 (statement)


状态 13

   64 unary_expr: NOT • unary_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    unary_expr    转到状态 53
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 14

   63 unary_expr: ADD • unary_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    unary_expr    转到状态 54
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 15

   62 unary_expr: SUB • unary_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    unary_expr    转到状态 55
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 16

   72 expr: IDENTIFIER •

    $default  使用规则 72 以归约 (expr)


状态 17

   73 expr: INTEGER •

    $default  使用规则 73 以归约 (expr)


状态 18

   74 expr: CHAR •

    $default  使用规则 74 以归约 (expr)


状态 19

   76 expr: BOOL •

    $default  使用规则 76 以归约 (expr)


状态 20

   75 expr: STRING •

    $default  使用规则 75 以归约 (expr)


状态 21

   65 unary_expr: SELFADD • unary_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    unary_expr    转到状态 56
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 22

   66 unary_expr: SELFSUB • unary_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    unary_expr    转到状态 57
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 23

    0 $accept: program • $end

    $end  偏移，并进入状态 58


状态 24

    2 program: statements •
    4 statements: statements • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    $default  使用规则 2 以归约 (program)

    statement      转到状态 59
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 25

    3 statements: statement •

    $default  使用规则 3 以归约 (statements)


状态 26

    6 statement: decl_stmt • SEMICOLON

    SEMICOLON  偏移，并进入状态 60


状态 27

    7 statement: assign_stmt • SEMICOLON

    SEMICOLON  偏移，并进入状态 61


状态 28

   10 statement: iter_stmt •

    $default  使用规则 10 以归约 (statement)


状态 29

   11 statement: if_stmt •

    $default  使用规则 11 以归约 (statement)


状态 30

   12 statement: for_stmt •

    $default  使用规则 12 以归约 (statement)


状态 31

    8 statement: scanf_stmt • SEMICOLON

    SEMICOLON  偏移，并进入状态 62


状态 32

    9 statement: printf_stmt • SEMICOLON

    SEMICOLON  偏移，并进入状态 63


状态 33

   16 assign_stmt: assign_expr •

    $default  使用规则 16 以归约 (assign_stmt)


状态 34

   36 assign_expr: or_expr • ASSIGNEQUAL assign_expr
   37            | or_expr • ADDEQUAL assign_expr
   38            | or_expr • SUBEQUAL assign_expr
   39            | or_expr • MULEQUAL assign_expr
   40            | or_expr • DIVEQUAL assign_expr
   41            | or_expr •
   43 or_expr: or_expr • OR and_expr

    ASSIGNEQUAL  偏移，并进入状态 64
    ADDEQUAL     偏移，并进入状态 65
    SUBEQUAL     偏移，并进入状态 66
    MULEQUAL     偏移，并进入状态 67
    DIVEQUAL     偏移，并进入状态 68
    OR           偏移，并进入状态 69

    $default  使用规则 41 以归约 (assign_expr)


状态 35

   44 or_expr: and_expr •
   45 and_expr: and_expr • AND equal_expr

    AND  偏移，并进入状态 70

    $default  使用规则 44 以归约 (or_expr)


状态 36

   46 and_expr: equal_expr •
   47 equal_expr: equal_expr • EQUAL relation_expr
   48           | equal_expr • NOTEQUAL relation_expr

    EQUAL     偏移，并进入状态 71
    NOTEQUAL  偏移，并进入状态 72

    $default  使用规则 46 以归约 (and_expr)


状态 37

   49 equal_expr: relation_expr •
   50 relation_expr: relation_expr • GREAT add_expr
   51              | relation_expr • LESS add_expr
   52              | relation_expr • GREATEQUAL add_expr
   53              | relation_expr • LESSEQUAL add_expr

    GREAT       偏移，并进入状态 73
    LESS        偏移，并进入状态 74
    GREATEQUAL  偏移，并进入状态 75
    LESSEQUAL   偏移，并进入状态 76

    $default  使用规则 49 以归约 (equal_expr)


状态 38

   54 relation_expr: add_expr •
   55 add_expr: add_expr • ADD mul_expr
   56         | add_expr • SUB mul_expr

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 54 以归约 (relation_expr)


状态 39

   57 add_expr: mul_expr •
   58 mul_expr: mul_expr • MUL unary_expr
   59         | mul_expr • DIV unary_expr
   60         | mul_expr • MOD unary_expr

    MUL  偏移，并进入状态 79
    DIV  偏移，并进入状态 80
    MOD  偏移，并进入状态 81

    $default  使用规则 57 以归约 (add_expr)


状态 40

   61 mul_expr: unary_expr •

    $default  使用规则 61 以归约 (mul_expr)


状态 41

   67 unary_expr: postfix_expr •
   68 postfix_expr: postfix_expr • SELFADD
   69             | postfix_expr • SELFSUB

    SELFADD  偏移，并进入状态 82
    SELFSUB  偏移，并进入状态 83

    $default  使用规则 67 以归约 (unary_expr)


状态 42

   70 postfix_expr: expr •

    $default  使用规则 70 以归约 (postfix_expr)


状态 43

    1 program: T • MAIN LEFT RIGHT statements
   14 decl_stmt: T • IDENTIFIER ASSIGNEQUAL add_expr
   15          | T • idlist

    MAIN        偏移，并进入状态 84
    REFERENCE   偏移，并进入状态 85
    IDENTIFIER  偏移，并进入状态 86

    idlist  转到状态 87


状态 44

   42 bool_stmt: LEFT • or_expr RIGHT

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    or_expr        转到状态 88
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 45

   17 iter_stmt: WHILE bool_stmt • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 89
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 46

   19 for_stmt: FOR LEFT • decl_stmt SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   20         | FOR LEFT • assign_expr SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   21         | FOR LEFT • SEMICOLON SEMICOLON RIGHT statement RIGHT
   22         | FOR LEFT • SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   23         | FOR LEFT • assign_expr SEMICOLON SEMICOLON assign_expr RIGHT statement
   24         | FOR LEFT • assign_expr SEMICOLON or_expr SEMICOLON RIGHT statement
   25         | FOR LEFT • assign_expr SEMICOLON SEMICOLON RIGHT statement
   26         | FOR LEFT • SEMICOLON or_expr SEMICOLON RIGHT statement
   27         | FOR LEFT • SEMICOLON SEMICOLON assign_expr RIGHT statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    LEFT        偏移，并进入状态 10
    SEMICOLON   偏移，并进入状态 90
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    decl_stmt      转到状态 91
    assign_expr    转到状态 92
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 47

   18 if_stmt: IF bool_stmt • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 93
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 48

   28 scanf_stmt: SCANF LEFT • STRING COMMA idlist RIGHT
   29           | SCANF LEFT • STRING RIGHT

    STRING  偏移，并进入状态 94


状态 49

   30 printf_stmt: PRINTF LEFT • STRING COMMA idlist RIGHT
   31            | PRINTF LEFT • STRING RIGHT

    STRING  偏移，并进入状态 95


状态 50

   55 add_expr: add_expr • ADD mul_expr
   56         | add_expr • SUB mul_expr
   71 expr: LEFT add_expr • RIGHT

    RIGHT  偏移，并进入状态 96
    ADD    偏移，并进入状态 77
    SUB    偏移，并进入状态 78


状态 51

    4 statements: statements • statement
   13 statement: LEFT2 statements • RIGHT2

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    RIGHT2      偏移，并进入状态 97
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 59
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 52

   14 decl_stmt: T • IDENTIFIER ASSIGNEQUAL add_expr
   15          | T • idlist

    REFERENCE   偏移，并进入状态 85
    IDENTIFIER  偏移，并进入状态 86

    idlist  转到状态 87


状态 53

   64 unary_expr: NOT unary_expr •

    $default  使用规则 64 以归约 (unary_expr)


状态 54

   63 unary_expr: ADD unary_expr •

    $default  使用规则 63 以归约 (unary_expr)


状态 55

   62 unary_expr: SUB unary_expr •

    $default  使用规则 62 以归约 (unary_expr)


状态 56

   65 unary_expr: SELFADD unary_expr •

    $default  使用规则 65 以归约 (unary_expr)


状态 57

   66 unary_expr: SELFSUB unary_expr •

    $default  使用规则 66 以归约 (unary_expr)


状态 58

    0 $accept: program $end •

    $default  接受


状态 59

    4 statements: statements statement •

    $default  使用规则 4 以归约 (statements)


状态 60

    6 statement: decl_stmt SEMICOLON •

    $default  使用规则 6 以归约 (statement)


状态 61

    7 statement: assign_stmt SEMICOLON •

    $default  使用规则 7 以归约 (statement)


状态 62

    8 statement: scanf_stmt SEMICOLON •

    $default  使用规则 8 以归约 (statement)


状态 63

    9 statement: printf_stmt SEMICOLON •

    $default  使用规则 9 以归约 (statement)


状态 64

   36 assign_expr: or_expr ASSIGNEQUAL • assign_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 98
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 65

   37 assign_expr: or_expr ADDEQUAL • assign_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 99
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 66

   38 assign_expr: or_expr SUBEQUAL • assign_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 100
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 67

   39 assign_expr: or_expr MULEQUAL • assign_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 101
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 68

   40 assign_expr: or_expr DIVEQUAL • assign_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 102
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 69

   43 or_expr: or_expr OR • and_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    and_expr       转到状态 103
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 70

   45 and_expr: and_expr AND • equal_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    equal_expr     转到状态 104
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 71

   47 equal_expr: equal_expr EQUAL • relation_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    relation_expr  转到状态 105
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 72

   48 equal_expr: equal_expr NOTEQUAL • relation_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    relation_expr  转到状态 106
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 73

   50 relation_expr: relation_expr GREAT • add_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    add_expr      转到状态 107
    mul_expr      转到状态 39
    unary_expr    转到状态 40
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 74

   51 relation_expr: relation_expr LESS • add_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    add_expr      转到状态 108
    mul_expr      转到状态 39
    unary_expr    转到状态 40
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 75

   52 relation_expr: relation_expr GREATEQUAL • add_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    add_expr      转到状态 109
    mul_expr      转到状态 39
    unary_expr    转到状态 40
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 76

   53 relation_expr: relation_expr LESSEQUAL • add_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    add_expr      转到状态 110
    mul_expr      转到状态 39
    unary_expr    转到状态 40
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 77

   55 add_expr: add_expr ADD • mul_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    mul_expr      转到状态 111
    unary_expr    转到状态 40
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 78

   56 add_expr: add_expr SUB • mul_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    mul_expr      转到状态 112
    unary_expr    转到状态 40
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 79

   58 mul_expr: mul_expr MUL • unary_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    unary_expr    转到状态 113
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 80

   59 mul_expr: mul_expr DIV • unary_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    unary_expr    转到状态 114
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 81

   60 mul_expr: mul_expr MOD • unary_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    unary_expr    转到状态 115
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 82

   68 postfix_expr: postfix_expr SELFADD •

    $default  使用规则 68 以归约 (postfix_expr)


状态 83

   69 postfix_expr: postfix_expr SELFSUB •

    $default  使用规则 69 以归约 (postfix_expr)


状态 84

    1 program: T MAIN • LEFT RIGHT statements

    LEFT  偏移，并进入状态 116


状态 85

   35 idlist: REFERENCE • IDENTIFIER

    IDENTIFIER  偏移，并进入状态 117


状态 86

   14 decl_stmt: T IDENTIFIER • ASSIGNEQUAL add_expr
   34 idlist: IDENTIFIER •

    ASSIGNEQUAL  偏移，并进入状态 118

    $default  使用规则 34 以归约 (idlist)


状态 87

   15 decl_stmt: T idlist •
   32 idlist: idlist • COMMA IDENTIFIER
   33       | idlist • COMMA REFERENCE IDENTIFIER

    COMMA  偏移，并进入状态 119

    $default  使用规则 15 以归约 (decl_stmt)


状态 88

   42 bool_stmt: LEFT or_expr • RIGHT
   43 or_expr: or_expr • OR and_expr

    RIGHT  偏移，并进入状态 120
    OR     偏移，并进入状态 69


状态 89

   17 iter_stmt: WHILE bool_stmt statement •

    $default  使用规则 17 以归约 (iter_stmt)


状态 90

   21 for_stmt: FOR LEFT SEMICOLON • SEMICOLON RIGHT statement RIGHT
   22         | FOR LEFT SEMICOLON • or_expr SEMICOLON assign_expr RIGHT statement
   26         | FOR LEFT SEMICOLON • or_expr SEMICOLON RIGHT statement
   27         | FOR LEFT SEMICOLON • SEMICOLON assign_expr RIGHT statement

    LEFT        偏移，并进入状态 10
    SEMICOLON   偏移，并进入状态 121
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    or_expr        转到状态 122
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 91

   19 for_stmt: FOR LEFT decl_stmt • SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement

    SEMICOLON  偏移，并进入状态 123


状态 92

   20 for_stmt: FOR LEFT assign_expr • SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement
   23         | FOR LEFT assign_expr • SEMICOLON SEMICOLON assign_expr RIGHT statement
   24         | FOR LEFT assign_expr • SEMICOLON or_expr SEMICOLON RIGHT statement
   25         | FOR LEFT assign_expr • SEMICOLON SEMICOLON RIGHT statement

    SEMICOLON  偏移，并进入状态 124


状态 93

   18 if_stmt: IF bool_stmt statement •

    $default  使用规则 18 以归约 (if_stmt)


状态 94

   28 scanf_stmt: SCANF LEFT STRING • COMMA idlist RIGHT
   29           | SCANF LEFT STRING • RIGHT

    COMMA  偏移，并进入状态 125
    RIGHT  偏移，并进入状态 126


状态 95

   30 printf_stmt: PRINTF LEFT STRING • COMMA idlist RIGHT
   31            | PRINTF LEFT STRING • RIGHT

    COMMA  偏移，并进入状态 127
    RIGHT  偏移，并进入状态 128


状态 96

   71 expr: LEFT add_expr RIGHT •

    $default  使用规则 71 以归约 (expr)


状态 97

   13 statement: LEFT2 statements RIGHT2 •

    $default  使用规则 13 以归约 (statement)


状态 98

   36 assign_expr: or_expr ASSIGNEQUAL assign_expr •

    $default  使用规则 36 以归约 (assign_expr)


状态 99

   37 assign_expr: or_expr ADDEQUAL assign_expr •

    $default  使用规则 37 以归约 (assign_expr)


状态 100

   38 assign_expr: or_expr SUBEQUAL assign_expr •

    $default  使用规则 38 以归约 (assign_expr)


状态 101

   39 assign_expr: or_expr MULEQUAL assign_expr •

    $default  使用规则 39 以归约 (assign_expr)


状态 102

   40 assign_expr: or_expr DIVEQUAL assign_expr •

    $default  使用规则 40 以归约 (assign_expr)


状态 103

   43 or_expr: or_expr OR and_expr •
   45 and_expr: and_expr • AND equal_expr

    AND  偏移，并进入状态 70

    $default  使用规则 43 以归约 (or_expr)


状态 104

   45 and_expr: and_expr AND equal_expr •
   47 equal_expr: equal_expr • EQUAL relation_expr
   48           | equal_expr • NOTEQUAL relation_expr

    EQUAL     偏移，并进入状态 71
    NOTEQUAL  偏移，并进入状态 72

    $default  使用规则 45 以归约 (and_expr)


状态 105

   47 equal_expr: equal_expr EQUAL relation_expr •
   50 relation_expr: relation_expr • GREAT add_expr
   51              | relation_expr • LESS add_expr
   52              | relation_expr • GREATEQUAL add_expr
   53              | relation_expr • LESSEQUAL add_expr

    GREAT       偏移，并进入状态 73
    LESS        偏移，并进入状态 74
    GREATEQUAL  偏移，并进入状态 75
    LESSEQUAL   偏移，并进入状态 76

    $default  使用规则 47 以归约 (equal_expr)


状态 106

   48 equal_expr: equal_expr NOTEQUAL relation_expr •
   50 relation_expr: relation_expr • GREAT add_expr
   51              | relation_expr • LESS add_expr
   52              | relation_expr • GREATEQUAL add_expr
   53              | relation_expr • LESSEQUAL add_expr

    GREAT       偏移，并进入状态 73
    LESS        偏移，并进入状态 74
    GREATEQUAL  偏移，并进入状态 75
    LESSEQUAL   偏移，并进入状态 76

    $default  使用规则 48 以归约 (equal_expr)


状态 107

   50 relation_expr: relation_expr GREAT add_expr •
   55 add_expr: add_expr • ADD mul_expr
   56         | add_expr • SUB mul_expr

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 50 以归约 (relation_expr)


状态 108

   51 relation_expr: relation_expr LESS add_expr •
   55 add_expr: add_expr • ADD mul_expr
   56         | add_expr • SUB mul_expr

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 51 以归约 (relation_expr)


状态 109

   52 relation_expr: relation_expr GREATEQUAL add_expr •
   55 add_expr: add_expr • ADD mul_expr
   56         | add_expr • SUB mul_expr

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 52 以归约 (relation_expr)


状态 110

   53 relation_expr: relation_expr LESSEQUAL add_expr •
   55 add_expr: add_expr • ADD mul_expr
   56         | add_expr • SUB mul_expr

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 53 以归约 (relation_expr)


状态 111

   55 add_expr: add_expr ADD mul_expr •
   58 mul_expr: mul_expr • MUL unary_expr
   59         | mul_expr • DIV unary_expr
   60         | mul_expr • MOD unary_expr

    MUL  偏移，并进入状态 79
    DIV  偏移，并进入状态 80
    MOD  偏移，并进入状态 81

    $default  使用规则 55 以归约 (add_expr)


状态 112

   56 add_expr: add_expr SUB mul_expr •
   58 mul_expr: mul_expr • MUL unary_expr
   59         | mul_expr • DIV unary_expr
   60         | mul_expr • MOD unary_expr

    MUL  偏移，并进入状态 79
    DIV  偏移，并进入状态 80
    MOD  偏移，并进入状态 81

    $default  使用规则 56 以归约 (add_expr)


状态 113

   58 mul_expr: mul_expr MUL unary_expr •

    $default  使用规则 58 以归约 (mul_expr)


状态 114

   59 mul_expr: mul_expr DIV unary_expr •

    $default  使用规则 59 以归约 (mul_expr)


状态 115

   60 mul_expr: mul_expr MOD unary_expr •

    $default  使用规则 60 以归约 (mul_expr)


状态 116

    1 program: T MAIN LEFT • RIGHT statements

    RIGHT  偏移，并进入状态 129


状态 117

   35 idlist: REFERENCE IDENTIFIER •

    $default  使用规则 35 以归约 (idlist)


状态 118

   14 decl_stmt: T IDENTIFIER ASSIGNEQUAL • add_expr

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    add_expr      转到状态 130
    mul_expr      转到状态 39
    unary_expr    转到状态 40
    postfix_expr  转到状态 41
    expr          转到状态 42


状态 119

   32 idlist: idlist COMMA • IDENTIFIER
   33       | idlist COMMA • REFERENCE IDENTIFIER

    REFERENCE   偏移，并进入状态 131
    IDENTIFIER  偏移，并进入状态 132


状态 120

   42 bool_stmt: LEFT or_expr RIGHT •

    $default  使用规则 42 以归约 (bool_stmt)


状态 121

   21 for_stmt: FOR LEFT SEMICOLON SEMICOLON • RIGHT statement RIGHT
   27         | FOR LEFT SEMICOLON SEMICOLON • assign_expr RIGHT statement

    LEFT        偏移，并进入状态 10
    RIGHT       偏移，并进入状态 133
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 134
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 122

   22 for_stmt: FOR LEFT SEMICOLON or_expr • SEMICOLON assign_expr RIGHT statement
   26         | FOR LEFT SEMICOLON or_expr • SEMICOLON RIGHT statement
   43 or_expr: or_expr • OR and_expr

    SEMICOLON  偏移，并进入状态 135
    OR         偏移，并进入状态 69


状态 123

   19 for_stmt: FOR LEFT decl_stmt SEMICOLON • or_expr SEMICOLON assign_expr RIGHT statement

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    or_expr        转到状态 136
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 124

   20 for_stmt: FOR LEFT assign_expr SEMICOLON • or_expr SEMICOLON assign_expr RIGHT statement
   23         | FOR LEFT assign_expr SEMICOLON • SEMICOLON assign_expr RIGHT statement
   24         | FOR LEFT assign_expr SEMICOLON • or_expr SEMICOLON RIGHT statement
   25         | FOR LEFT assign_expr SEMICOLON • SEMICOLON RIGHT statement

    LEFT        偏移，并进入状态 10
    SEMICOLON   偏移，并进入状态 137
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    or_expr        转到状态 138
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 125

   28 scanf_stmt: SCANF LEFT STRING COMMA • idlist RIGHT

    REFERENCE   偏移，并进入状态 85
    IDENTIFIER  偏移，并进入状态 139

    idlist  转到状态 140


状态 126

   29 scanf_stmt: SCANF LEFT STRING RIGHT •

    $default  使用规则 29 以归约 (scanf_stmt)


状态 127

   30 printf_stmt: PRINTF LEFT STRING COMMA • idlist RIGHT

    REFERENCE   偏移，并进入状态 85
    IDENTIFIER  偏移，并进入状态 139

    idlist  转到状态 141


状态 128

   31 printf_stmt: PRINTF LEFT STRING RIGHT •

    $default  使用规则 31 以归约 (printf_stmt)


状态 129

    1 program: T MAIN LEFT RIGHT • statements

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statements     转到状态 142
    statement      转到状态 25
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 130

   14 decl_stmt: T IDENTIFIER ASSIGNEQUAL add_expr •
   55 add_expr: add_expr • ADD mul_expr
   56         | add_expr • SUB mul_expr

    ADD  偏移，并进入状态 77
    SUB  偏移，并进入状态 78

    $default  使用规则 14 以归约 (decl_stmt)


状态 131

   33 idlist: idlist COMMA REFERENCE • IDENTIFIER

    IDENTIFIER  偏移，并进入状态 143


状态 132

   32 idlist: idlist COMMA IDENTIFIER •

    $default  使用规则 32 以归约 (idlist)


状态 133

   21 for_stmt: FOR LEFT SEMICOLON SEMICOLON RIGHT • statement RIGHT

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 144
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 134

   27 for_stmt: FOR LEFT SEMICOLON SEMICOLON assign_expr • RIGHT statement

    RIGHT  偏移，并进入状态 145


状态 135

   22 for_stmt: FOR LEFT SEMICOLON or_expr SEMICOLON • assign_expr RIGHT statement
   26         | FOR LEFT SEMICOLON or_expr SEMICOLON • RIGHT statement

    LEFT        偏移，并进入状态 10
    RIGHT       偏移，并进入状态 146
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 147
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 136

   19 for_stmt: FOR LEFT decl_stmt SEMICOLON or_expr • SEMICOLON assign_expr RIGHT statement
   43 or_expr: or_expr • OR and_expr

    SEMICOLON  偏移，并进入状态 148
    OR         偏移，并进入状态 69


状态 137

   23 for_stmt: FOR LEFT assign_expr SEMICOLON SEMICOLON • assign_expr RIGHT statement
   25         | FOR LEFT assign_expr SEMICOLON SEMICOLON • RIGHT statement

    LEFT        偏移，并进入状态 10
    RIGHT       偏移，并进入状态 149
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 150
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 138

   20 for_stmt: FOR LEFT assign_expr SEMICOLON or_expr • SEMICOLON assign_expr RIGHT statement
   24         | FOR LEFT assign_expr SEMICOLON or_expr • SEMICOLON RIGHT statement
   43 or_expr: or_expr • OR and_expr

    SEMICOLON  偏移，并进入状态 151
    OR         偏移，并进入状态 69


状态 139

   34 idlist: IDENTIFIER •

    $default  使用规则 34 以归约 (idlist)


状态 140

   28 scanf_stmt: SCANF LEFT STRING COMMA idlist • RIGHT
   32 idlist: idlist • COMMA IDENTIFIER
   33       | idlist • COMMA REFERENCE IDENTIFIER

    COMMA  偏移，并进入状态 119
    RIGHT  偏移，并进入状态 152


状态 141

   30 printf_stmt: PRINTF LEFT STRING COMMA idlist • RIGHT
   32 idlist: idlist • COMMA IDENTIFIER
   33       | idlist • COMMA REFERENCE IDENTIFIER

    COMMA  偏移，并进入状态 119
    RIGHT  偏移，并进入状态 153


状态 142

    1 program: T MAIN LEFT RIGHT statements •
    4 statements: statements • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    $default  使用规则 1 以归约 (program)

    statement      转到状态 59
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 143

   33 idlist: idlist COMMA REFERENCE IDENTIFIER •

    $default  使用规则 33 以归约 (idlist)


状态 144

   21 for_stmt: FOR LEFT SEMICOLON SEMICOLON RIGHT statement • RIGHT

    RIGHT  偏移，并进入状态 154


状态 145

   27 for_stmt: FOR LEFT SEMICOLON SEMICOLON assign_expr RIGHT • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 155
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 146

   26 for_stmt: FOR LEFT SEMICOLON or_expr SEMICOLON RIGHT • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 156
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 147

   22 for_stmt: FOR LEFT SEMICOLON or_expr SEMICOLON assign_expr • RIGHT statement

    RIGHT  偏移，并进入状态 157


状态 148

   19 for_stmt: FOR LEFT decl_stmt SEMICOLON or_expr SEMICOLON • assign_expr RIGHT statement

    LEFT        偏移，并进入状态 10
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 158
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 149

   25 for_stmt: FOR LEFT assign_expr SEMICOLON SEMICOLON RIGHT • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 159
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 150

   23 for_stmt: FOR LEFT assign_expr SEMICOLON SEMICOLON assign_expr • RIGHT statement

    RIGHT  偏移，并进入状态 160


状态 151

   20 for_stmt: FOR LEFT assign_expr SEMICOLON or_expr SEMICOLON • assign_expr RIGHT statement
   24         | FOR LEFT assign_expr SEMICOLON or_expr SEMICOLON • RIGHT statement

    LEFT        偏移，并进入状态 10
    RIGHT       偏移，并进入状态 161
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    assign_expr    转到状态 162
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42


状态 152

   28 scanf_stmt: SCANF LEFT STRING COMMA idlist RIGHT •

    $default  使用规则 28 以归约 (scanf_stmt)


状态 153

   30 printf_stmt: PRINTF LEFT STRING COMMA idlist RIGHT •

    $default  使用规则 30 以归约 (printf_stmt)


状态 154

   21 for_stmt: FOR LEFT SEMICOLON SEMICOLON RIGHT statement RIGHT •

    $default  使用规则 21 以归约 (for_stmt)


状态 155

   27 for_stmt: FOR LEFT SEMICOLON SEMICOLON assign_expr RIGHT statement •

    $default  使用规则 27 以归约 (for_stmt)


状态 156

   26 for_stmt: FOR LEFT SEMICOLON or_expr SEMICOLON RIGHT statement •

    $default  使用规则 26 以归约 (for_stmt)


状态 157

   22 for_stmt: FOR LEFT SEMICOLON or_expr SEMICOLON assign_expr RIGHT • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 163
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 158

   19 for_stmt: FOR LEFT decl_stmt SEMICOLON or_expr SEMICOLON assign_expr • RIGHT statement

    RIGHT  偏移，并进入状态 164


状态 159

   25 for_stmt: FOR LEFT assign_expr SEMICOLON SEMICOLON RIGHT statement •

    $default  使用规则 25 以归约 (for_stmt)


状态 160

   23 for_stmt: FOR LEFT assign_expr SEMICOLON SEMICOLON assign_expr RIGHT • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 165
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 161

   24 for_stmt: FOR LEFT assign_expr SEMICOLON or_expr SEMICOLON RIGHT • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 166
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 162

   20 for_stmt: FOR LEFT assign_expr SEMICOLON or_expr SEMICOLON assign_expr • RIGHT statement

    RIGHT  偏移，并进入状态 167


状态 163

   22 for_stmt: FOR LEFT SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement •

    $default  使用规则 22 以归约 (for_stmt)


状态 164

   19 for_stmt: FOR LEFT decl_stmt SEMICOLON or_expr SEMICOLON assign_expr RIGHT • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 168
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 165

   23 for_stmt: FOR LEFT assign_expr SEMICOLON SEMICOLON assign_expr RIGHT statement •

    $default  使用规则 23 以归约 (for_stmt)


状态 166

   24 for_stmt: FOR LEFT assign_expr SEMICOLON or_expr SEMICOLON RIGHT statement •

    $default  使用规则 24 以归约 (for_stmt)


状态 167

   20 for_stmt: FOR LEFT assign_expr SEMICOLON or_expr SEMICOLON assign_expr RIGHT • statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    T_BOOL      偏移，并进入状态 4
    WHILE       偏移，并进入状态 5
    FOR         偏移，并进入状态 6
    IF          偏移，并进入状态 7
    SCANF       偏移，并进入状态 8
    PRINTF      偏移，并进入状态 9
    LEFT        偏移，并进入状态 10
    LEFT2       偏移，并进入状态 11
    SEMICOLON   偏移，并进入状态 12
    NOT         偏移，并进入状态 13
    ADD         偏移，并进入状态 14
    SUB         偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    BOOL        偏移，并进入状态 19
    STRING      偏移，并进入状态 20
    SELFADD     偏移，并进入状态 21
    SELFSUB     偏移，并进入状态 22

    statement      转到状态 169
    decl_stmt      转到状态 26
    assign_stmt    转到状态 27
    iter_stmt      转到状态 28
    if_stmt        转到状态 29
    for_stmt       转到状态 30
    scanf_stmt     转到状态 31
    printf_stmt    转到状态 32
    assign_expr    转到状态 33
    or_expr        转到状态 34
    and_expr       转到状态 35
    equal_expr     转到状态 36
    relation_expr  转到状态 37
    add_expr       转到状态 38
    mul_expr       转到状态 39
    unary_expr     转到状态 40
    postfix_expr   转到状态 41
    expr           转到状态 42
    T              转到状态 52


状态 168

   19 for_stmt: FOR LEFT decl_stmt SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement •

    $default  使用规则 19 以归约 (for_stmt)


状态 169

   20 for_stmt: FOR LEFT assign_expr SEMICOLON or_expr SEMICOLON assign_expr RIGHT statement •

    $default  使用规则 20 以归约 (for_stmt)
